[tool.poetry]
name = "test_for_mobicult"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"


[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    "migrations",
    "__pycache__",
    "_prometheus*",
    "env",
    ".env",
    "./env",
    "env/",
    ".env/",
    ".venv/",
]

[tool.ruff.lint]
select = [
    "E", "W", "F", "I", "UP", "T20", "TCH", "INT", "PL", "FLY", "RUF", "ANN", "C90", "SIM101", "BLE001"
]
ignore = [
    "UP035",
    "PLR0913", "PLW2901", "PLW0603",
    "RUF001", "RUF002", "RUF003", "RUF012", "RUF010", "RUF015", "RUF005", "RUF009",
    "ANN401",
    "FLY002",
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["E402", "E401"]
"tests/*" = ["S", "ANN", "PLR2004", "C901"]

[tool.ruff.format]
# не меняем кавычки, возможные варианты: "double" | "single" | "preserve"
quote-style = "preserve"

[tool.pytest.ini_options]
addopts = '-p no:warnings'
testpaths = [
    "tests",
]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integtest: marks integration tests",
    "unit",
    "slow: mark tests that may take considerable time"
]
env = [
    "USE_LOCAL_TEST_CONFIG = true",
]
asyncio_mode = 'auto'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
